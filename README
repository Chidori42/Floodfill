c++  -std=c++11 floodfill.cpp -o floodfill  


Global Variables and Setup
P_x, P_y: Starting coordinates for the player on the grid.
N_x, N_y: Coordinates for the target (enemy).
grid: 2D character vector representing the map layout. Symbols represent:
'1': Wall
'0': Open path
'P': Player start position
'N': Target position
flood_fill Function
Purpose: Performs a recursive flood-fill algorithm starting from a given cell (x, y) to "mark" open cells connected to it and locate the position of the target 'N'.
Parameters:
grid: Reference to a 2D character vector.
x, y: Current coordinates for flood-fill.
Returns: false to signal a stop in the recursion if a boundary or wall is reached.
Operation:
Checks if the current cell is out of bounds or if it's a wall ('1') or target ('N'). If so, exits.
Marks open cells by setting them to '1' and recursively moves in four directions.
convert_array Function
Purpose: Transforms the character grid into an integer grid of distances from the target, using recursion to assign the shortest distances.
Parameters:
int_grid: 2D integer vector representing distance values.
n_x, n_y: Coordinates of the current cell.
step: Distance value for the current cell.
Operation:
If the cell has a lower or equal distance or is the player's position, exits.
Updates the cell with the current step value and recursively calls in four directions with incremented step.
find_shortest_path Function
Purpose: Uses BFS (Breadth-First Search) to find the shortest path from the target to the player, based on int_grid distance values.
Parameters:
int_grid: Distance grid generated by convert_array.
n_x, n_y: Starting coordinates for the target.
p_x, p_y: Target coordinates for the player.
Returns: A vector of coordinate pairs representing the path from the target to the player.
Operation:
Initiates a queue for BFS and a parent vector for path reconstruction.
For each cell, checks neighbors, marks them visited, and updates parent if they are not walls.
When the player’s position is found, backtracks through parent to build the path.
main Function
Initialize int_grid: Converts the character grid to an integer grid, with -1 representing walls.
Flood Fill: Calls flood_fill from the player's position to mark open cells and identify the target’s coordinates.
Distance Calculation: Uses convert_array to fill int_grid with distances from the target.
Output: Prints the distance grid.
Shortest Path Calculation: Calls find_shortest_path to retrieve the shortest path from the target to the player.
Path Output: Prints the path coordinates from the target to the player.